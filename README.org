* Description

This repository provides an overlay to nixpkgs' emacs packages set.

The overlay adds ~withStraightOverrides~ -- a function that generates a library
and makes it available to emacs. The library overrides straight.el recipes for
packages that are already installed by nix. Whatever is not installed by nix
will be installed by straight.el

* Usage

** In flake-based NixOS configuration

#+begin_src nix
{
  inputs.nixpkgs.url = "github:nixos/nixpkgs";
  inputs.nix-store-emacs-packages.url = "github:teu5us/nix-store-emacs-packages";
  inputs.nix-store-emacs-packages.inputs.nixpkgs.follows = "nixpkgs";

  outputs = { self, nixpkgs, nix-store-emacs-packages }: {
    nixosConfigurations.hostname = nixpkgs.lib.nixosSystem {
      modules = [
        nix-store-emacs-packages.nixosModule
      ];
    };
  };
}
#+end_src

** In channel-based configuration

#+begin_src nix
{ config, pkgs, options, lib, ... }:

{
  nixpkgs.overlays = [
    (import (builtins.fetchTarball {
      url = "https://github.com/teu5us/nix-store-emacs-packages/archive/refs/heads/main.tar.gz";
    }))
  ];
}
#+end_src

** Defining your emacs

With home-manager:

#+begin_src nix
{
  programs.emacs = {
    enable = true;
    package = your-emacs-package;
    extraPackages = (epkgs: epkgs.withStraightOverrides [ package-list ]);
  };
}
#+end_src

As a package:

#+begin_src nix
{
  environment.systemPackages =
    let
      myEmacs = (emacsPackagesFor some-emacs-package).withPackages
        (epkgs: epkgs.withStraightOverrides [ package-list ]);
    in [ myEmacs ];
}
#+end_src

** Then in emacs

Require nix-straight-overrides right after loading straight.el

#+begin_src emacs-lisp
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; code that loads straight.el ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(require 'nix-straight-overrides)

;; or possibly if you use the same configuration elsewhere

(ignore-errors
  (require 'nix-straight-overrides))
#+end_src
